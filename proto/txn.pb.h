// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txn.proto

#ifndef PROTOBUF_txn_2eproto__INCLUDED
#define PROTOBUF_txn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_txn_2eproto();
void protobuf_AssignDesc_txn_2eproto();
void protobuf_ShutdownFile_txn_2eproto();

class TxnProto;

// ===================================================================

class TxnProto : public ::google::protobuf::Message {
 public:
  TxnProto();
  virtual ~TxnProto();
  
  TxnProto(const TxnProto& from);
  
  inline TxnProto& operator=(const TxnProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TxnProto& default_instance();
  
  void Swap(TxnProto* other);
  
  // implements Message ----------------------------------------------
  
  TxnProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TxnProto& from);
  void MergeFrom(const TxnProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 txn_id = 1;
  inline bool has_txn_id() const;
  inline void clear_txn_id();
  static const int kTxnIdFieldNumber = 1;
  inline ::google::protobuf::int64 txn_id() const;
  inline void set_txn_id(::google::protobuf::int64 value);
  
  // optional int32 txn_type = 10;
  inline bool has_txn_type() const;
  inline void clear_txn_type();
  static const int kTxnTypeFieldNumber = 10;
  inline ::google::protobuf::int32 txn_type() const;
  inline void set_txn_type(::google::protobuf::int32 value);
  
  // optional int32 isolation_level = 11;
  inline bool has_isolation_level() const;
  inline void clear_isolation_level();
  static const int kIsolationLevelFieldNumber = 11;
  inline ::google::protobuf::int32 isolation_level() const;
  inline void set_isolation_level(::google::protobuf::int32 value);
  
  // optional bool multipartition = 20;
  inline bool has_multipartition() const;
  inline void clear_multipartition();
  static const int kMultipartitionFieldNumber = 20;
  inline bool multipartition() const;
  inline void set_multipartition(bool value);
  
  // repeated int64 rset = 30;
  inline int rset_size() const;
  inline void clear_rset();
  static const int kRsetFieldNumber = 30;
  inline ::google::protobuf::int64 rset(int index) const;
  inline void set_rset(int index, ::google::protobuf::int64 value);
  inline void add_rset(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      rset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_rset();
  
  // repeated int64 wset = 31;
  inline int wset_size() const;
  inline void clear_wset();
  static const int kWsetFieldNumber = 31;
  inline ::google::protobuf::int64 wset(int index) const;
  inline void set_wset(int index, ::google::protobuf::int64 value);
  inline void add_wset(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      wset() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_wset();
  
  // repeated int64 args = 32;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 32;
  inline ::google::protobuf::int64 args(int index) const;
  inline void set_args(int index, ::google::protobuf::int64 value);
  inline void add_args(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      args() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_args();
  
  // @@protoc_insertion_point(class_scope:TxnProto)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 txn_id_;
  ::google::protobuf::int32 txn_type_;
  ::google::protobuf::int32 isolation_level_;
  bool multipartition_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > rset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > wset_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > args_;
  friend void  protobuf_AddDesc_txn_2eproto();
  friend void protobuf_AssignDesc_txn_2eproto();
  friend void protobuf_ShutdownFile_txn_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TxnProto* default_instance_;
};
// ===================================================================


// ===================================================================

// TxnProto

// required int64 txn_id = 1;
inline bool TxnProto::has_txn_id() const {
  return _has_bit(0);
}
inline void TxnProto::clear_txn_id() {
  txn_id_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 TxnProto::txn_id() const {
  return txn_id_;
}
inline void TxnProto::set_txn_id(::google::protobuf::int64 value) {
  _set_bit(0);
  txn_id_ = value;
}

// optional int32 txn_type = 10;
inline bool TxnProto::has_txn_type() const {
  return _has_bit(1);
}
inline void TxnProto::clear_txn_type() {
  txn_type_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 TxnProto::txn_type() const {
  return txn_type_;
}
inline void TxnProto::set_txn_type(::google::protobuf::int32 value) {
  _set_bit(1);
  txn_type_ = value;
}

// optional int32 isolation_level = 11;
inline bool TxnProto::has_isolation_level() const {
  return _has_bit(2);
}
inline void TxnProto::clear_isolation_level() {
  isolation_level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 TxnProto::isolation_level() const {
  return isolation_level_;
}
inline void TxnProto::set_isolation_level(::google::protobuf::int32 value) {
  _set_bit(2);
  isolation_level_ = value;
}

// optional bool multipartition = 20;
inline bool TxnProto::has_multipartition() const {
  return _has_bit(3);
}
inline void TxnProto::clear_multipartition() {
  multipartition_ = false;
  _clear_bit(3);
}
inline bool TxnProto::multipartition() const {
  return multipartition_;
}
inline void TxnProto::set_multipartition(bool value) {
  _set_bit(3);
  multipartition_ = value;
}

// repeated int64 rset = 30;
inline int TxnProto::rset_size() const {
  return rset_.size();
}
inline void TxnProto::clear_rset() {
  rset_.Clear();
}
inline ::google::protobuf::int64 TxnProto::rset(int index) const {
  return rset_.Get(index);
}
inline void TxnProto::set_rset(int index, ::google::protobuf::int64 value) {
  rset_.Set(index, value);
}
inline void TxnProto::add_rset(::google::protobuf::int64 value) {
  rset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TxnProto::rset() const {
  return rset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TxnProto::mutable_rset() {
  return &rset_;
}

// repeated int64 wset = 31;
inline int TxnProto::wset_size() const {
  return wset_.size();
}
inline void TxnProto::clear_wset() {
  wset_.Clear();
}
inline ::google::protobuf::int64 TxnProto::wset(int index) const {
  return wset_.Get(index);
}
inline void TxnProto::set_wset(int index, ::google::protobuf::int64 value) {
  wset_.Set(index, value);
}
inline void TxnProto::add_wset(::google::protobuf::int64 value) {
  wset_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TxnProto::wset() const {
  return wset_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TxnProto::mutable_wset() {
  return &wset_;
}

// repeated int64 args = 32;
inline int TxnProto::args_size() const {
  return args_.size();
}
inline void TxnProto::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::int64 TxnProto::args(int index) const {
  return args_.Get(index);
}
inline void TxnProto::set_args(int index, ::google::protobuf::int64 value) {
  args_.Set(index, value);
}
inline void TxnProto::add_args(::google::protobuf::int64 value) {
  args_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TxnProto::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TxnProto::mutable_args() {
  return &args_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_txn_2eproto__INCLUDED
